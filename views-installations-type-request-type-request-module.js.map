{"version":3,"sources":["webpack:///./src/app/shared/models/installations/type-request.model.ts","webpack:///./src/app/shared/services/installations/type-request.service.ts","webpack:///./src/app/views/installations/type-request/create/create-type-request.component.html","webpack:///./src/app/views/installations/type-request/create/create-type-request.component.ts","webpack:///./src/app/views/installations/type-request/detail/detail-type-request.component.html","webpack:///./src/app/views/installations/type-request/detail/detail-type-request.component.ts","webpack:///./src/app/views/installations/type-request/edit/edit-type-request.component.html","webpack:///./src/app/views/installations/type-request/edit/edit-type-request.component.ts","webpack:///./src/app/views/installations/type-request/list/list-type-request.component.html","webpack:///./src/app/views/installations/type-request/list/list-type-request.component.ts","webpack:///./src/app/views/installations/type-request/type-request-routing.module.ts","webpack:///./src/app/views/installations/type-request/type-request.module.ts"],"names":[],"mappings":"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","file":"views-installations-type-request-type-request-module.js","sourcesContent":["export class TypeRequestModel {\r\n\r\n   public typeRequestId: number;\r\n   public name: string;\r\n   public state: boolean;\r\n\r\n}","\r\n\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from 'environments/environment';\r\nimport { BaseService } from \"../_base.service\";\r\nimport { TypeRequestModel } from \"../../models/installations/type-request.model\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { MaestroTypeRequestModel } from \"../../models/installations/maestro-type-request.model\";\r\n\r\n@Injectable()\r\nexport class TypeRequestService  extends BaseService<TypeRequestModel, MaestroTypeRequestModel> {\r\n\r\n    private apiURL: string;\r\n\r\n    constructor(protected _http: HttpClient) {\r\n        super(_http, environment.apiGatewayURL);\r\n        this.apiURL = environment.apiGatewayURL;\r\n    }\r\n}\r\n","module.exports = \"<div [ngClass]=\\\"{'disabled':isLoaded}\\\">\\r\\n    <div class=\\\"ctn-loading\\\">\\r\\n        <img src=\\\"/assets/img/loading.gif\\\" alt=\\\"Cargando...\\\">\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"card\\\" [ngClass]=\\\"{'disabled':!isLoaded}\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"steps\\\">\\r\\n            <ul class=\\\"nav justify-content-center\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link active\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"activateStep('step1')\\\" [ngClass]=\\\"{'active': stepName == 'step1'}\\\">\\r\\n                        <span class=\\\"steps__num\\\">1</span> Información General\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <form class=\\\"company-form forms\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div class=\\\"ctn-step\\\" [ngClass]=\\\"{'step-active': stepName == 'step1'}\\\">\\r\\n                <div class=\\\"forms__subTitle-form\\\">\\r\\n                    <h2>Crear Type Request</h2>\\r\\n                </div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12 form-group\\\">\\r\\n                        <label for=\\\"inputText\\\">\\r\\n                            Type Request Id</label>\\r\\n                            <input name=\\\"typeRequestId\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Type Request Id\\\" [(ngModel)]=\\\"typeRequestModel.typeRequestId\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12 form-group\\\">\\r\\n                        <label for=\\\"inputText\\\">\\r\\n                            Name</label>\\r\\n\\t    <input name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"typeRequestModel.name\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12 form-group\\\">\\r\\n                        <label for=\\\"inputText\\\">\\r\\n                            State</label>\\r\\n                            <input name=\\\"state\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"typeRequestModel.state\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"forms__ctn-button\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-outline-secondary\\\" routerLink=\\\"/type-request/list\\\">Regresar</a>\\r\\n                    <input name=\\\"\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Crear Type Request\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","// Componentes\r\nimport { AppDatePickerComponent, AppFileUploadComponent} from '../../../../shared/components';\r\nimport { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { APIENDPOINT } from '../../../../config/configuration';\r\nimport { Router } from '@angular/router';\r\n\r\n// Modelos\r\nimport { TypeRequestModel } from '../../../../shared/models/installations/type-request.model';\r\nimport { ResponseModel } from '../../../../shared/models/common/response.model';\r\nimport { DeleteModel } from '../../../../shared/models/common/delete.model';\r\n\r\n// Servicios\r\nimport { TypeRequestService } from '../../../../shared/services/installations/type-request.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { debug } from 'util';\r\n\r\n@Component(\r\n  {\r\n    templateUrl: 'create-type-request.component.html'\r\n  }\r\n)\r\nexport class CreateTypeRequestComponent implements OnInit {\r\n  isLoaded = false;\r\n  stepName = 'step1';\r\n\r\n  typeRequestModel: TypeRequestModel = new TypeRequestModel();\r\n\r\n\r\n  constructor(\r\n    private _typeRequestService: TypeRequestService,\r\n    private _toastrService: ToastrService,\r\n    private _router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n   this.isLoaded = true;\r\n  }\r\n\r\n  // Cambia de seccion en el formulario\r\n  activateStep(step: string) {\r\n    this.stepName = step;\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  // Guarda la informacion del TypeRequest\r\n  onSubmit() {\r\n    this.isLoaded = false;\r\n\r\n    this.formatDates();\r\n\r\n    this.saveModel('');\r\n  }\r\n\r\n\r\n  saveModel(storedFiles) {\r\n\r\n    this._typeRequestService.create(APIENDPOINT.createTypeRequest, this.typeRequestModel)\r\n    .subscribe(response => {\r\n      if (response.header.reponseCode === 200) {\r\n        this._toastrService.success(response.header.message, '¡Éxito!');\r\n        this._router.navigate([`/typeRequest/list`]);\r\n      } else {\r\n        this._toastrService.error(response.header.message, '¡Error!');\r\n        this.isLoaded = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Parsea los calendarios al modelo\r\n  formatDates() {\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n<div *ngIf=\\\"!isLoaded\\\">\\r\\n    <div class=\\\"ctn-loading\\\">\\r\\n        <img src=\\\"/assets/img/loading.gif\\\" alt=\\\"Cargando...\\\">\\r\\n    </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"isLoaded\\\" class=\\\"row\\\">\\r\\n    <!-- Información General -->\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            Detalle Type Request\\r\\n        </div>\\r\\n        <div class=\\\"card-body ctn-detail\\\">\\r\\n\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-12 col-lg-12 info\\\">\\r\\n                   <strong>Type Request Id:</strong> {{ typeRequestModel.typeRequestId }}\\r\\n                </div>\\r\\n           </div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-12 col-lg-12 info\\\">\\r\\n                   <strong>Name:</strong> {{ typeRequestModel.name }}\\r\\n                </div>\\r\\n           </div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-12 col-md-12 col-lg-12 info\\\">\\r\\n                   <strong>State:</strong> {{ typeRequestModel.state }}\\r\\n                </div>\\r\\n           </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"forms__ctn-button btn_bottom\\\">\\r\\n        <a routerLink=\\\"/type-request/list\\\" class=\\\"btn btn-outline-secondary\\\">Regresar</a>\\r\\n        <a routerLink=\\\"/type-request/edit/{{typeRequestModel.typeRequestId}}\\\" class=\\\"btn btn-primary\\\">Editar</a>\\r\\n    </div>\\r\\n</div>\\r\\n\"","\r\n\r\nimport { APIENDPOINT } from '../../../../config/configuration';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n// Servicios\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TypeRequestService } from '../../../../shared/services/installations/type-request.service';\r\nimport { TypeRequestModel } from '../../../../shared/models/installations/type-request.model';\r\n\r\n@Component(\r\n    {\r\n        templateUrl: 'detail-type-request.component.html'\r\n    }\r\n)\r\nexport class DetailTypeRequestComponent implements OnInit {\r\n    typeRequestId: number;    \r\n    typeRequestModel: TypeRequestModel = new TypeRequestModel();\r\n    isLoaded = false;\r\n\r\n    constructor(\r\n        private _activatedRoute: ActivatedRoute,\r\n        private _TypeRequestService: TypeRequestService,\r\n        private _toastrService: ToastrService,\r\n        private _router: Router\r\n    ) {\r\n        this._activatedRoute.params.subscribe(params => this.typeRequestId = params.id);\r\n        this._router.events.subscribe(() => { window.scrollTo(0, 0) });\r\n    };\r\n\r\n   ngOnInit() {\r\n    this.getDetailClient();\r\n  }\r\n\r\n    // Obtiene la informacion del modelo\r\n    getDetailClient() {\r\n        this._TypeRequestService.getDetails(APIENDPOINT.detailTypeRequest, String(this.typeRequestId))\r\n        .subscribe(response => {\r\n            if (response.header.reponseCode === 200) {\r\n                this.typeRequestModel = response.data;\r\n                this.isLoaded = true;\r\n            } else {\r\n                this._toastrService.error(response.header.message, '¡Error!');\r\n            }\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div [ngClass]=\\\"{'disabled':isLoaded}\\\">\\r\\n    <div class=\\\"ctn-loading\\\">\\r\\n        <img src=\\\"/assets/img/loading.gif\\\" alt=\\\"Cargando...\\\">\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"card\\\" [ngClass]=\\\"{'disabled':!isLoaded}\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"steps\\\">\\r\\n            <ul class=\\\"nav justify-content-center\\\">\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a class=\\\"nav-link active\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"activateStep('step1')\\\" [ngClass]=\\\"{'active': stepName == 'step1'}\\\">\\r\\n                        <span class=\\\"steps__num\\\">1</span> Información General\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <form class=\\\"company-form forms\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div class=\\\"ctn-step\\\" [ngClass]=\\\"{'step-active': stepName == 'step1'}\\\">\\r\\n                <div class=\\\"forms__subTitle-form\\\">\\r\\n                    <h2>Editar Type Request</h2>\\r\\n                </div>\\r\\n\\t\\t\\t   <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12 form-group\\\">\\r\\n                        <label for=\\\"inputText\\\">\\r\\n                            Type Request Id</label>\\r\\n                            <input name=\\\"typeRequestId\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Type Request Id\\\" [(ngModel)]=\\\"typeRequestModel.typeRequestId\\\">\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\t\\t\\t   <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12 form-group\\\">\\r\\n                        <label for=\\\"inputText\\\">\\r\\n                            Name</label>\\r\\n\\t               <input name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"typeRequestModel.name\\\">\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\t\\t\\t   <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12 form-group\\\">\\r\\n                        <label for=\\\"inputText\\\">\\r\\n                            State</label>\\r\\n                             <input name=\\\"state\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"typeRequestModel.state\\\">\\r\\n\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"forms__ctn-button\\\">\\r\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-outline-secondary\\\" routerLink=\\\"/type-request/list\\\">Regresar</a>\\r\\n                    <input name=\\\"\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Editar Type Request\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","// Componentes\r\nimport { AppDatePickerComponent,AppFileUploadComponent } from '../../../../shared/components';\r\nimport { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { APIENDPOINT } from '../../../../config/configuration';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { environment } from 'environments/environment';\r\n\r\n// Modelos\r\nimport { TypeRequestModel } from '../../../../shared/models/installations/type-request.model';\r\nimport { ResponseModel } from '../../../../shared/models/common/response.model';\r\nimport { DeleteModel } from '../../../../shared/models/common/delete.model';\r\nimport { DateModel } from '../../../../shared/models/common/date.model';\r\n\r\n// Servicios\r\nimport { TypeRequestService } from '../../../../shared/services/installations/type-request.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { HelperService } from '../../../../shared/services/helper.service';\r\nimport { debug } from 'util';\r\n\r\n@Component(\r\n  {\r\n    templateUrl: 'edit-type-request.component.html'\r\n  }\r\n)\r\nexport class EditTypeRequestComponent implements OnInit {\r\n  isLoaded = false;\r\n  stepName = 'step1';\r\n  typeRequestId: number;\r\n  \r\n  typeRequestModel: TypeRequestModel = new TypeRequestModel();\r\n\r\n\r\n  constructor(\r\n    private _typeRequestService: TypeRequestService,\r\n    private _toastrService: ToastrService,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _helper: HelperService,\r\n    private _router: Router\r\n  ) {\r\n    this._activatedRoute.params.subscribe(params => this.typeRequestId = params.id);\r\n    this._router.events.subscribe(() => { window.scrollTo(0, 0)});\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getDetailTypeRequest();\r\n  }\r\n\r\n\r\n  getDetailTypeRequest() {\r\n    this._typeRequestService.getDetails(`${APIENDPOINT.detailTypeRequest}`, String(this.typeRequestId))\r\n      .subscribe(resp => {\r\n        if (resp.header.reponseCode === 200) {\r\n          this.typeRequestModel = resp.data as TypeRequestModel;\r\n          this.formatDates();\r\n          this.isLoaded = true;\r\n        } else {\r\n          this._toastrService.error(resp.header.message, '¡Error!');\r\n        }\r\n      })\r\n  }\r\n\r\n  // Cambia de seccion en el formulario\r\n  activateStep(step: string) {\r\n    this.stepName = step;\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  // Guarda la informacion del tercero\r\n  onSubmit() {\r\n    this.isLoaded = false;\r\n\r\n    this.formatDates();\r\n\r\n    this.saveModel('');\r\n\r\n  }\r\n\r\n\r\n  saveModel(storedFiles) {\r\n\r\n    this._typeRequestService.create(APIENDPOINT.editTypeRequest, this.typeRequestModel)\r\n    .subscribe(response => {\r\n      if (response.header.reponseCode === 200) {\r\n        this._toastrService.success(response.header.message, '¡Éxito!');\r\n        this._router.navigate([`/typeRequest/detail/${response.data.typeRequestId}`]);\r\n      } else {\r\n        this._toastrService.error(response.header.message, '¡Error!');\r\n        this.isLoaded = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Parsea los calendarios al modelo\r\n  formatDates(toString: boolean = false) {\r\n    if (toString) {\r\n    } else {\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <h1>\\r\\n            Listado de Type Request\\r\\n        </h1>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"float-right\\\">\\r\\n            <a routerLink=\\\"/type-request/create\\\" class=\\\"btn btn-primary\\\">Crear Type Request</a>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"card ctn-table\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"float-left\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#filterModal\\\">Filtrar resultados</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"exportToExcel()\\\">Exportar</button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"results\\\" class=\\\"float-right text-total-list\\\"> Total registros:\\r\\n                <strong>{{ results.totalItems }} </strong>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"!results\\\" class=\\\"card-body ctn-loading\\\">\\r\\n            <img src=\\\"/assets/img/loading.gif\\\" alt=\\\"Cargando...\\\">\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"results\\\">\\r\\n            <div class=\\\"card-body animated fadeIn\\\">\\r\\n                <div class=\\\"data-table\\\">\\r\\n                    <table>\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t    <th class=\\\"w-20\\\">Opciones</th>\\r\\n\\t\\t\\t                    <th>Name</th>\\r\\n\\t\\t\\t                    <th>State</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let item of results.list\\\">\\r\\n                                \\r\\n                                <td>\\r\\n                                    <a routerLink=\\\"/type-request/detail/{{item.typeRequestId}}\\\" class=\\\"btn btn-outline-secondary\\\">Ver</a>\\r\\n                                    <a routerLink=\\\"/type-request/edit/{{item.typeRequestId}}\\\" class=\\\"btn btn-outline-secondary\\\">Editar</a>\\r\\n                                    <a class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteRegisterModal\\\" (click)=\\\"setIdDelete(item.typeRequestId)\\\">Eliminar</a>\\r\\n                                </td>\\r\\n                                \\r\\n\\t\\t\\t\\t\\t\\t\\t    <td class=\\\"text-field\\\">{{item.name}}</td>\\r\\n                                \\r\\n\\t\\t\\t\\t\\t\\t\\t    <td class=\\\"text-field\\\">{{item.state}}</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"results\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-12 col-12\\\">\\r\\n                    <p class=\\\"text-center\\\">Página {{results.pageNumber}} de {{smallnumPages}}</p>\\r\\n                    <pagination [totalItems]=\\\"results.totalItems\\\" (pageChanged)=\\\"onPageChange($event)\\\" [(ngModel)]=\\\"paginationModel.pageNumber\\\" [itemsPerPage]=\\\"paginationModel.pageSize\\\" class=\\\"pagination-md pull-right\\\" firstText=\\\"Primera\\\" lastText=\\\"Última\\\" nextText=\\\"Siguiente\\\"\\r\\n                        previousText=\\\"Anterior\\\" [boundaryLinks]=\\\"true\\\" [maxSize]=\\\"10\\\" (numPages)=\\\"smallnumPages = $event\\\"></pagination>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<filtro-component #filtro [search]=\\\"getAllByFilter()\\\" [responseFilterModel]=\\\"responseFilterModel\\\" [paginationModel]=\\\"paginationModel\\\"></filtro-component>\\r\\n\\r\\n<app-delete-register (deleteItem)=\\\"deleteRecord()\\\"></app-delete-register>\\r\\n\"","// Componentes\r\nimport { FiltroComponent } from 'app/shared/components';\r\nimport { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { APIENDPOINT } from '../../../../config/configuration';\r\n\r\n// Constants\r\nimport { ModelNameConstant, ListNameConstant } from 'app/shared/commons/const/excel-export.constant';\r\nimport { environment } from 'environments/environment';\r\n\r\n// Modelos\r\nimport { PaginatioResponseModel } from 'app/shared/models/common/pagination-response.model';\r\nimport { FileGeneratorModel } from 'app/shared/models/repositorio/file-generator.model';\r\nimport { ResponseFilterModel } from 'app/shared/models/common/response-filter.model';\r\nimport { FilterParamsModel } from 'app/shared/models/common/filter-params.model';\r\nimport { PaginationModel } from 'app/shared/models/common/pagination.model';\r\nimport { TypeRequestModel } from 'app/shared/models/installations/type-request.model';\r\nimport { DeleteModel } from '../../../../shared/models/common/delete.model';\r\n\r\n// Servicios\r\n//import { RepositorioService } from 'app/shared/services/repositorio.service';\r\nimport { TypeRequestService } from '../../../../shared/services/installations/type-request.service';\r\nimport { FilterService } from 'app/shared/services/filter.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component(\r\n    {\r\n        templateUrl: 'list-type-request.component.html'\r\n    }\r\n)\r\nexport class ListTypeRequestComponent implements OnInit {\r\n    smallnumPages: number;\r\n    Id: number;\r\n\r\n    responseFilterModel: ResponseFilterModel = new ResponseFilterModel();\r\n    paginationModel: PaginationModel = new PaginationModel();\r\n    results: PaginatioResponseModel<TypeRequestModel[]>;\r\n\r\n    @ViewChild('filtro') filtro: FiltroComponent;\r\n\r\n    constructor(\r\n        //private _repositorioService: RepositorioService,\r\n        private _typeRequestService: TypeRequestService,\r\n        private _filterService: FilterService,\r\n        private _toastrService: ToastrService\r\n    ) {\r\n        this.paginationModel.pageNumber = 1;\r\n        this.paginationModel.pageSize = 50;\r\n        this.paginationModel.sortProperty = 'Id';\r\n        this.paginationModel.sortType = 'desc';\r\n     }\r\n\r\n    ngOnInit() {\r\n        this.getFilterMasterList();\r\n    }\r\n\r\n    // Obtiene los maestros para el filtro\r\n    getFilterMasterList() {\r\n        const fullEndPoint = `${environment.apiGatewayURL}${APIENDPOINT.getTypeRequestMasterFilter}`;\r\n        this._filterService.getMasterFilter(fullEndPoint)\r\n        .subscribe(response => {\r\n            if (response.header.reponseCode === 200) {\r\n                this.responseFilterModel = response.data;\r\n                this.getAll();\r\n            } else {\r\n                this._toastrService.error(response.header.message, '¡Error!');\r\n            }\r\n        })\r\n    }\r\n\r\n    // Método que ejecuta desde el filtro\r\n    getAllByFilter() {\r\n        const self = this;\r\n        return (filtros: any) => {\r\n            self.paginationModel.pageNumber = 1;\r\n            self.getAll(filtros);\r\n        };\r\n    };\r\n\r\n    // Método que ejecuta al selecionar una nueva página\r\n    onPageChange(event: any): void {\r\n        this.paginationModel.pageNumber = event.page;\r\n        this.getAll(this.filtro.camposFiltro);\r\n    }\r\n\r\n    getAll(filters: any = null) {\r\n        if (filters != null) {\r\n            this.paginationModel.filters = filters;\r\n        }\r\n\r\n        this._typeRequestService.getAllPag(APIENDPOINT.getAllTypeRequest, this.paginationModel)\r\n        .subscribe(response => {\r\n            if (response.header.reponseCode === 200) {\r\n                this.results = new PaginatioResponseModel<TypeRequestModel[]>();\r\n                this.results = response.data;\r\n            } else {\r\n                this._toastrService.error(response.header.message, '¡Error!');\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteRecord() {\r\n        const deleteModel: DeleteModel = new DeleteModel();\r\n        deleteModel.id = this.Id;\r\n\r\n        this._typeRequestService.delete(APIENDPOINT.deleteTypeRequest, deleteModel)\r\n        .subscribe(response => {\r\n            if (response.header.reponseCode === 200) {\r\n                this.results = null;\r\n                this.getAll();\r\n            } else {\r\n                this._toastrService.error(response.header.message, '¡Error!');\r\n            }\r\n        });\r\n    };\r\n\r\n    setIdDelete(id: number) {\r\n        this.Id = id;\r\n    }\r\n\r\n    //exportToExcel() {\r\n    //    let fileGeneratorModel = new FileGeneratorModel();\r\n    //    fileGeneratorModel.model = this.results.list;\r\n    //    fileGeneratorModel.view = ModelNameConstant.TypeRequest;\r\n    //    fileGeneratorModel.listName = ListNameConstant.TypeRequest;\r\n\r\n    //    this._repositorioService.exportExcel(APIENDPOINT.exportListToExcel, fileGeneratorModel).subscribe(response => {\r\n    //        if (response.header.reponseCode === 200 && response.data !== '') {\r\n    //            const url= `${environment.filesTempsURL}${response.data}`;\r\n    //            window.open(url, '_blank');\r\n    //        } else {\r\n    //            this._toastrService.error(response.header.message, '¡Error!');\r\n    //        }\r\n    //    });\r\n   // }\r\n}","\r\n\r\n// Modulos\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\n// Componentes\r\nimport { ListTypeRequestComponent } from './list/list-type-request.component';\r\nimport { CreateTypeRequestComponent } from './create/create-type-request.component';\r\nimport { DetailTypeRequestComponent } from './detail/detail-type-request.component';\r\nimport { EditTypeRequestComponent } from './edit/edit-type-request.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Type Request'\r\n    },\r\n    children: [\r\n      {\r\n        path: 'create',\r\n        component: CreateTypeRequestComponent,\r\n        data: {\r\n          title: 'Nuevo Type Request'\r\n        }\r\n      },\r\n      {\r\n        path: 'list',\r\n        component: ListTypeRequestComponent,\r\n        data: {\r\n          title: 'Listado Type Request'\r\n        }\r\n      },\r\n      {\r\n        path: 'detail/:id',\r\n        component: DetailTypeRequestComponent,\r\n        data: {\r\n          title: 'Detalle Type Request'\r\n        }\r\n      },\r\n      {\r\n        path: 'edit/:id',\r\n        component: EditTypeRequestComponent,\r\n        data: {\r\n          title: 'Editar Type Request'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TypeRequestRoutingModule {}\r\n\r\n","// Modulos\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { SharedModule } from '../../../shared/ShareModules';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\n// Componentes\r\nimport { DetailTypeRequestComponent } from './detail/detail-type-request.component';\r\nimport { CreateTypeRequestComponent } from './create/create-type-request.component';\r\nimport { TypeRequestRoutingModule } from './type-request-routing.module';\r\nimport { ListTypeRequestComponent } from './list/list-type-request.component';\r\nimport { EditTypeRequestComponent } from './edit/edit-type-request.component';\r\n\r\n// Services\r\nimport { TypeRequestService } from 'app/shared/services/installations/type-request.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TypeRequestRoutingModule,\r\n    ChartsModule,\r\n    BsDropdownModule,\r\n    FormsModule,\r\n    PaginationModule.forRoot(),\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    CreateTypeRequestComponent,\r\n    ListTypeRequestComponent,\r\n    DetailTypeRequestComponent,\r\n    EditTypeRequestComponent\r\n  ],\r\n  providers: [\r\n    TypeRequestService,\r\n  ]\r\n})\r\nexport class TypeRequestModule { }\r\n\r\n"],"sourceRoot":""}